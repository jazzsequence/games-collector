{
        "packages": [
                {
                        "name": "automattic/vipwpcs",
                        "version": "2.0.0",
                        "version_normalized": "2.0.0.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/Automattic/VIP-Coding-Standards.git",
                                "reference": "fc02f491dc9f51da7c32941ac579f70b9ed300c5"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/Automattic/VIP-Coding-Standards/zipball/fc02f491dc9f51da7c32941ac579f70b9ed300c5",
                                "reference": "fc02f491dc9f51da7c32941ac579f70b9ed300c5",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">=5.6",
                                "squizlabs/php_codesniffer": "^3.3.1",
                                "wp-coding-standards/wpcs": "^2.1"
                        },
                        "require-dev": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.5",
                                "phpcompatibility/php-compatibility": "^9",
                                "phpunit/phpunit": "^5 || ^6 || ^7"
                        },
                        "suggest": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.5 || This Composer plugin will sort out the PHPCS 'installed_paths' automatically."
                        },
                        "time": "2019-07-12T08:47:36+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "source",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "MIT"
                        ],
                        "authors": [
                                {
                                        "name": "Contributors",
                                        "homepage": "https://github.com/Automattic/VIP-Coding-Standards/graphs/contributors"
                                }
                        ],
                        "description": "PHP_CodeSniffer rules (sniffs) to enforce WordPress VIP minimum coding conventions",
                        "keywords": [
                                "phpcs",
                                "standards",
                                "wordpress"
                        ],
                        "support": {
                                "issues": "https://github.com/Automattic/VIP-Coding-Standards/issues",
                                "source": "https://github.com/Automattic/VIP-Coding-Standards",
                                "wiki": "https://github.com/Automattic/VIP-Coding-Standards/wiki"
                        },
                        "install-path": "../automattic/vipwpcs"
                },
                {
                        "name": "cmb2/cmb2",
                        "version": "v2.11.0",
                        "version_normalized": "2.11.0.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/CMB2/CMB2.git",
                                "reference": "2847828b5cce1b48d09427ee13e6f7c752704468"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/CMB2/CMB2/zipball/2847828b5cce1b48d09427ee13e6f7c752704468",
                                "reference": "2847828b5cce1b48d09427ee13e6f7c752704468",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">7.4"
                        },
                        "require-dev": {
                                "apigen/apigen": "4.1.2",
                                "awesomemotive/am-cli-tools": ">=1.3.7",
                                "nette/utils": "2.5.3",
                                "phpunit/phpunit": "^6.5",
                                "yoast/phpunit-polyfills": "^1.1"
                        },
                        "suggest": {
                                "composer/installers": "~1.0"
                        },
                        "time": "2024-04-02T19:30:07+00:00",
                        "type": "wordpress-plugin",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "GPL-2.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "Justin Sternberg",
                                        "email": "justin@dsgnwrks.pro",
                                        "homepage": "https://dsgnwrks.pro",
                                        "role": "Developer"
                                },
                                {
                                        "name": "WebDevStudios",
                                        "email": "contact@webdevstudios.com",
                                        "homepage": "https://github.com/WebDevStudios",
                                        "role": "Developer"
                                }
                        ],
                        "description": "CMB2 is a metabox, custom fields, and forms library for WordPress that will blow your mind.",
                        "homepage": "https://github.com/CMB2/CMB2",
                        "keywords": [
                                "metabox",
                                "plugin",
                                "wordpress"
                        ],
                        "support": {
                                "issues": "https://github.com/CMB2/CMB2/issues",
                                "source": "http://wordpress.org/support/plugin/cmb2"
                        },
                        "install-path": "../cmb2/cmb2"
                },
                {
                        "name": "dealerdirect/phpcodesniffer-composer-installer",
                        "version": "v0.7.2",
                        "version_normalized": "0.7.2.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/Dealerdirect/phpcodesniffer-composer-installer.git",
                                "reference": "1c968e542d8843d7cd71de3c5c9c3ff3ad71a1db"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/Dealerdirect/phpcodesniffer-composer-installer/zipball/1c968e542d8843d7cd71de3c5c9c3ff3ad71a1db",
                                "reference": "1c968e542d8843d7cd71de3c5c9c3ff3ad71a1db",
                                "shasum": ""
                        },
                        "require": {
                                "composer-plugin-api": "^1.0 || ^2.0",
                                "php": ">=5.3",
                                "squizlabs/php_codesniffer": "^2.0 || ^3.1.0 || ^4.0"
                        },
                        "require-dev": {
                                "composer/composer": "*",
                                "php-parallel-lint/php-parallel-lint": "^1.3.1",
                                "phpcompatibility/php-compatibility": "^9.0"
                        },
                        "time": "2022-02-04T12:51:07+00:00",
                        "type": "composer-plugin",
                        "extra": {
                                "class": "Dealerdirect\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\Plugin"
                        },
                        "installation-source": "dist",
                        "autoload": {
                                "psr-4": {
                                        "Dealerdirect\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\": "src/"
                                }
                        },
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "MIT"
                        ],
                        "authors": [
                                {
                                        "name": "Franck Nijhof",
                                        "email": "franck.nijhof@dealerdirect.com",
                                        "homepage": "http://www.frenck.nl",
                                        "role": "Developer / IT Manager"
                                },
                                {
                                        "name": "Contributors",
                                        "homepage": "https://github.com/Dealerdirect/phpcodesniffer-composer-installer/graphs/contributors"
                                }
                        ],
                        "description": "PHP_CodeSniffer Standards Composer Installer Plugin",
                        "homepage": "http://www.dealerdirect.com",
                        "keywords": [
                                "PHPCodeSniffer",
                                "PHP_CodeSniffer",
                                "code quality",
                                "codesniffer",
                                "composer",
                                "installer",
                                "phpcbf",
                                "phpcs",
                                "plugin",
                                "qa",
                                "quality",
                                "standard",
                                "standards",
                                "style guide",
                                "stylecheck",
                                "tests"
                        ],
                        "support": {
                                "issues": "https://github.com/dealerdirect/phpcodesniffer-composer-installer/issues",
                                "source": "https://github.com/dealerdirect/phpcodesniffer-composer-installer"
                        },
                        "install-path": "../dealerdirect/phpcodesniffer-composer-installer"
                },
                {
                        "name": "fig-r/psr2r-sniffer",
                        "version": "0.5.2",
                        "version_normalized": "0.5.2.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/php-fig-rectified/psr2r-sniffer.git",
                                "reference": "7eb462bcf19abcae122855a6d79cc8f768c77880"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/php-fig-rectified/psr2r-sniffer/zipball/7eb462bcf19abcae122855a6d79cc8f768c77880",
                                "reference": "7eb462bcf19abcae122855a6d79cc8f768c77880",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">=5.4.16",
                                "squizlabs/php_codesniffer": "^3.0"
                        },
                        "time": "2019-07-30T11:13:07+00:00",
                        "bin": [
                                "bin/tokenize",
                                "bin/sniff"
                        ],
                        "type": "phpcodesniffer-standard",
                        "installation-source": "dist",
                        "autoload": {
                                "psr-4": {
                                        "PSR2R\\": "PSR2R"
                                }
                        },
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "MIT"
                        ],
                        "authors": [
                                {
                                        "name": "Mark Scherer",
                                        "homepage": "http://www.dereuromark.de",
                                        "role": "Contributor"
                                }
                        ],
                        "description": "Code-Sniffer, Auto-Fixer and Tokenizer for PSR2-R",
                        "keywords": [
                                "codesniffer",
                                "cs"
                        ],
                        "install-path": "../fig-r/psr2r-sniffer"
                },
                {
                        "name": "harvesthq/chosen",
                        "version": "v1.8.7",
                        "version_normalized": "1.8.7.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/harvesthq/chosen-package.git",
                                "reference": "ad86732b668627c131e61ee8f0e6e9ed52e4db8d"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/harvesthq/chosen-package/zipball/ad86732b668627c131e61ee8f0e6e9ed52e4db8d",
                                "reference": "ad86732b668627c131e61ee8f0e6e9ed52e4db8d",
                                "shasum": ""
                        },
                        "time": "2018-06-28T20:32:51+00:00",
                        "type": "library",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "MIT"
                        ],
                        "authors": [
                                {
                                        "name": "Koen Punt",
                                        "homepage": "https://github.com/koenpunt"
                                },
                                {
                                        "name": "Patrick Filler",
                                        "homepage": "https://github.com/pfiller"
                                },
                                {
                                        "name": "Christophe Coevoet",
                                        "homepage": "https://github.com/stof"
                                },
                                {
                                        "name": "Ken Earley",
                                        "homepage": "https://github.com/kenearley"
                                }
                        ],
                        "description": "Chosen is a JavaScript plugin that makes select boxes user-friendly. It is currently available in both jQuery and Prototype flavors.",
                        "homepage": "https://harvesthq.github.io/chosen/",
                        "keywords": [
                                "dropdown",
                                "form",
                                "input",
                                "multiselect",
                                "select",
                                "ui"
                        ],
                        "install-path": "../harvesthq/chosen"
                },
                {
                        "name": "humanmade/coding-standards",
                        "version": "v1.2.1",
                        "version_normalized": "1.2.1.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/humanmade/coding-standards.git",
                                "reference": "4b5aca25cb350f248f1797beed100edda9f32a0d"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/humanmade/coding-standards/zipball/4b5aca25cb350f248f1797beed100edda9f32a0d",
                                "reference": "4b5aca25cb350f248f1797beed100edda9f32a0d",
                                "shasum": ""
                        },
                        "require": {
                                "automattic/vipwpcs": "2.0.0",
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
                                "fig-r/psr2r-sniffer": "^0.5.0",
                                "php": ">=7.1",
                                "phpcompatibility/phpcompatibility-wp": "^2.0.0",
                                "squizlabs/php_codesniffer": "~3.5",
                                "wp-coding-standards/wpcs": "2.3.0"
                        },
                        "require-dev": {
                                "phpunit/phpunit": "^7"
                        },
                        "time": "2022-09-14T09:35:02+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "source",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "GPL-2.0-or-later"
                        ],
                        "description": "Human Made Coding Standards",
                        "support": {
                                "issues": "https://github.com/humanmade/coding-standards/issues",
                                "source": "https://github.com/humanmade/coding-standards/tree/v1.2.1"
                        },
                        "install-path": "../humanmade/coding-standards"
                },
                {
                        "name": "johnbillion/args",
                        "version": "2.1.0",
                        "version_normalized": "2.1.0.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/johnbillion/args.git",
                                "reference": "464f53c1eff41eaa7e7aec9d5e03a2c8cfb2b783"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/johnbillion/args/zipball/464f53c1eff41eaa7e7aec9d5e03a2c8cfb2b783",
                                "reference": "464f53c1eff41eaa7e7aec9d5e03a2c8cfb2b783",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">=8.0"
                        },
                        "require-dev": {
                                "ergebnis/json-printer": "^3.2",
                                "ergebnis/phpstan-rules": "^1.0",
                                "humanmade/coding-standards": "1.2.1",
                                "johnbillion/falsey-assertequals-detector": "^3",
                                "phpdocumentor/reflection": "~4.0 || ~5.0",
                                "phpstan/phpstan": "1.12.5",
                                "phpstan/phpstan-phpunit": "1.4.0",
                                "phpstan/phpstan-strict-rules": "1.6.1",
                                "phpunit/phpunit": "^9.0",
                                "roots/wordpress-core-installer": "^1.0.0",
                                "roots/wordpress-full": "6.6",
                                "szepeviktor/phpstan-wordpress": "1.3.5"
                        },
                        "time": "2024-10-05T15:23:39+00:00",
                        "type": "library",
                        "extra": {
                                "args-shapes": [
                                        {
                                                "function": "\\get_categories()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/category.php"
                                        },
                                        {
                                                "function": "\\get_comments()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/comment.php"
                                        },
                                        {
                                                "function": "\\get_posts()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\get_tags()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/category.php"
                                        },
                                        {
                                                "function": "\\get_terms()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\get_users()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/user.php"
                                        },
                                        {
                                                "function": "\\paginate_links()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/general-template.php"
                                        },
                                        {
                                                "function": "\\register_block_type()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/blocks.php"
                                        },
                                        {
                                                "function": "\\register_meta()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/meta.php"
                                        },
                                        {
                                                "function": "\\register_post_meta()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\register_post_status()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\register_post_type()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\register_rest_field()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/rest-api.php"
                                        },
                                        {
                                                "function": "\\register_setting()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/option.php"
                                        },
                                        {
                                                "function": "\\register_taxonomy()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\register_term_meta()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\wp_count_terms()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\wp_die()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/functions.php"
                                        },
                                        {
                                                "function": "\\wp_dropdown_categories()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/category-template.php"
                                        },
                                        {
                                                "function": "\\wp_dropdown_languages()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/l10n.php"
                                        },
                                        {
                                                "function": "\\wp_generate_tag_cloud()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/category-template.php"
                                        },
                                        {
                                                "function": "\\wp_get_nav_menus()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/nav-menu.php"
                                        },
                                        {
                                                "function": "\\wp_get_object_terms()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\wp_insert_post()",
                                                "param": "postarr",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\wp_insert_term()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\wp_insert_user()",
                                                "param": "userdata",
                                                "file": "vendor/wordpress/wordpress/wp-includes/user.php"
                                        },
                                        {
                                                "function": "\\wp_nav_menu()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/nav-menu-template.php"
                                        },
                                        {
                                                "function": "\\wp_remote_get()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_remote_head()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_remote_post()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_remote_request()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_safe_remote_get()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_safe_remote_head()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_safe_remote_post()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_safe_remote_request()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/http.php"
                                        },
                                        {
                                                "function": "\\wp_update_post()",
                                                "param": "postarr",
                                                "file": "vendor/wordpress/wordpress/wp-includes/post.php"
                                        },
                                        {
                                                "function": "\\wp_update_term()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/taxonomy.php"
                                        },
                                        {
                                                "function": "\\wp_update_user()",
                                                "param": "userdata",
                                                "file": "vendor/wordpress/wordpress/wp-includes/user.php"
                                        },
                                        {
                                                "method": "\\WP_Block_Type::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-block-type.php"
                                        },
                                        {
                                                "method": "\\WP_Comment_Query::__construct()",
                                                "param": "query",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-comment-query.php"
                                        },
                                        {
                                                "method": "\\WP_Customize_Control::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-customize-control.php"
                                        },
                                        {
                                                "method": "\\WP_Customize_Manager::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-customize-manager.php"
                                        },
                                        {
                                                "method": "\\WP_Customize_Panel::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-customize-panel.php"
                                        },
                                        {
                                                "method": "\\WP_Customize_Section::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-customize-section.php"
                                        },
                                        {
                                                "method": "\\WP_Customize_Setting::__construct()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-customize-setting.php"
                                        },
                                        {
                                                "method": "\\WP_Http::request()",
                                                "param": "args",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-http.php"
                                        },
                                        {
                                                "method": "\\WP_Query::parse_query()",
                                                "param": "query",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-query.php"
                                        },
                                        {
                                                "method": "\\WP_Term_Query::__construct()",
                                                "param": "query",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-term-query.php"
                                        },
                                        {
                                                "method": "\\WP_User_Query::prepare_query()",
                                                "param": "query",
                                                "file": "vendor/wordpress/wordpress/wp-includes/class-wp-user-query.php"
                                        }
                                ],
                                "wordpress-install-dir": "vendor/wordpress/wordpress"
                        },
                        "installation-source": "dist",
                        "autoload": {
                                "psr-4": {
                                        "Args\\": "src/"
                                }
                        },
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "GPL-2.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "John Blackbourn",
                                        "homepage": "https://johnblackbourn.com/"
                                }
                        ],
                        "description": "I don't want to get into an argument about this.",
                        "support": {
                                "issues": "https://github.com/johnbillion/args/issues",
                                "source": "https://github.com/johnbillion/args/tree/2.1.0"
                        },
                        "funding": [
                                {
                                        "url": "https://github.com/sponsors/johnbillion",
                                        "type": "github"
                                }
                        ],
                        "install-path": "../johnbillion/args"
                },
                {
                        "name": "johnbillion/extended-cpts",
                        "version": "5.0.9",
                        "version_normalized": "5.0.9.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/johnbillion/extended-cpts.git",
                                "reference": "98e974fd972205b419d658a18afa5f22350f477d"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/johnbillion/extended-cpts/zipball/98e974fd972205b419d658a18afa5f22350f477d",
                                "reference": "98e974fd972205b419d658a18afa5f22350f477d",
                                "shasum": ""
                        },
                        "require": {
                                "johnbillion/args": "^1.4.1 || ^2.0",
                                "php": ">= 7.4.0"
                        },
                        "require-dev": {
                                "automattic/phpcs-neutron-standard": "1.7.0",
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.7",
                                "johnbillion/falsey-assertequals-detector": "*",
                                "johnbillion/plugin-infrastructure": "dev-trunk",
                                "johnbillion/wp-compat": "0.1.0",
                                "lucatume/wp-browser": ">=3.0.21 <3.5",
                                "phpcompatibility/phpcompatibility-wp": "^2",
                                "phpstan/phpstan": "1.12.2",
                                "phpstan/phpstan-phpunit": "1.4.0",
                                "roots/wordpress-core-installer": "^1.0.0",
                                "roots/wordpress-full": "*",
                                "szepeviktor/phpstan-wordpress": "1.1.6",
                                "wp-coding-standards/wpcs": "2.3.0"
                        },
                        "time": "2024-09-29T16:07:18+00:00",
                        "type": "library",
                        "extra": {
                                "wordpress-install-dir": "vendor/wordpress/wordpress"
                        },
                        "installation-source": "dist",
                        "autoload": {
                                "files": [
                                        "functions.php"
                                ],
                                "psr-4": {
                                        "ExtCPTs\\": "src",
                                        "ExtCPTs\\Tests\\": "tests/integration"
                                }
                        },
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "GPL-2.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "John Blackbourn",
                                        "homepage": "https://johnblackbourn.com/"
                                }
                        ],
                        "description": "A library which provides extended functionality to WordPress custom post types and taxonomies.",
                        "homepage": "https://github.com/johnbillion/extended-cpts/",
                        "support": {
                                "issues": "https://github.com/johnbillion/extended-cpts/issues",
                                "source": "https://github.com/johnbillion/extended-cpts/tree/5.0.9"
                        },
                        "funding": [
                                {
                                        "url": "https://github.com/johnbillion",
                                        "type": "github"
                                }
                        ],
                        "install-path": "../johnbillion/extended-cpts"
                },
                {
                        "name": "phpcompatibility/php-compatibility",
                        "version": "9.3.5",
                        "version_normalized": "9.3.5.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/PHPCompatibility/PHPCompatibility.git",
                                "reference": "9fb324479acf6f39452e0655d2429cc0d3914243"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/PHPCompatibility/PHPCompatibility/zipball/9fb324479acf6f39452e0655d2429cc0d3914243",
                                "reference": "9fb324479acf6f39452e0655d2429cc0d3914243",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">=5.3",
                                "squizlabs/php_codesniffer": "^2.3 || ^3.0.2"
                        },
                        "conflict": {
                                "squizlabs/php_codesniffer": "2.6.2"
                        },
                        "require-dev": {
                                "phpunit/phpunit": "~4.5 || ^5.0 || ^6.0 || ^7.0"
                        },
                        "suggest": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.5 || This Composer plugin will sort out the PHPCS 'installed_paths' automatically.",
                                "roave/security-advisories": "dev-master || Helps prevent installing dependencies with known security issues."
                        },
                        "time": "2019-12-27T09:44:58+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "LGPL-3.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "Wim Godden",
                                        "homepage": "https://github.com/wimg",
                                        "role": "lead"
                                },
                                {
                                        "name": "Juliette Reinders Folmer",
                                        "homepage": "https://github.com/jrfnl",
                                        "role": "lead"
                                },
                                {
                                        "name": "Contributors",
                                        "homepage": "https://github.com/PHPCompatibility/PHPCompatibility/graphs/contributors"
                                }
                        ],
                        "description": "A set of sniffs for PHP_CodeSniffer that checks for PHP cross-version compatibility.",
                        "homepage": "http://techblog.wimgodden.be/tag/codesniffer/",
                        "keywords": [
                                "compatibility",
                                "phpcs",
                                "standards"
                        ],
                        "install-path": "../phpcompatibility/php-compatibility"
                },
                {
                        "name": "phpcompatibility/phpcompatibility-paragonie",
                        "version": "1.3.3",
                        "version_normalized": "1.3.3.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/PHPCompatibility/PHPCompatibilityParagonie.git",
                                "reference": "293975b465e0e709b571cbf0c957c6c0a7b9a2ac"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/PHPCompatibility/PHPCompatibilityParagonie/zipball/293975b465e0e709b571cbf0c957c6c0a7b9a2ac",
                                "reference": "293975b465e0e709b571cbf0c957c6c0a7b9a2ac",
                                "shasum": ""
                        },
                        "require": {
                                "phpcompatibility/php-compatibility": "^9.0"
                        },
                        "require-dev": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
                                "paragonie/random_compat": "dev-master",
                                "paragonie/sodium_compat": "dev-master"
                        },
                        "suggest": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^1.0 || This Composer plugin will sort out the PHP_CodeSniffer 'installed_paths' automatically.",
                                "roave/security-advisories": "dev-master || Helps prevent installing dependencies with known security issues."
                        },
                        "time": "2024-04-24T21:30:46+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "LGPL-3.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "Wim Godden",
                                        "role": "lead"
                                },
                                {
                                        "name": "Juliette Reinders Folmer",
                                        "role": "lead"
                                }
                        ],
                        "description": "A set of rulesets for PHP_CodeSniffer to check for PHP cross-version compatibility issues in projects, while accounting for polyfills provided by the Paragonie polyfill libraries.",
                        "homepage": "http://phpcompatibility.com/",
                        "keywords": [
                                "compatibility",
                                "paragonie",
                                "phpcs",
                                "polyfill",
                                "standards",
                                "static analysis"
                        ],
                        "support": {
                                "issues": "https://github.com/PHPCompatibility/PHPCompatibilityParagonie/issues",
                                "security": "https://github.com/PHPCompatibility/PHPCompatibilityParagonie/security/policy",
                                "source": "https://github.com/PHPCompatibility/PHPCompatibilityParagonie"
                        },
                        "funding": [
                                {
                                        "url": "https://github.com/PHPCompatibility",
                                        "type": "github"
                                },
                                {
                                        "url": "https://github.com/jrfnl",
                                        "type": "github"
                                },
                                {
                                        "url": "https://opencollective.com/php_codesniffer",
                                        "type": "open_collective"
                                }
                        ],
                        "install-path": "../phpcompatibility/phpcompatibility-paragonie"
                },
                {
                        "name": "phpcompatibility/phpcompatibility-wp",
                        "version": "2.1.5",
                        "version_normalized": "2.1.5.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/PHPCompatibility/PHPCompatibilityWP.git",
                                "reference": "01c1ff2704a58e46f0cb1ca9d06aee07b3589082"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/PHPCompatibility/PHPCompatibilityWP/zipball/01c1ff2704a58e46f0cb1ca9d06aee07b3589082",
                                "reference": "01c1ff2704a58e46f0cb1ca9d06aee07b3589082",
                                "shasum": ""
                        },
                        "require": {
                                "phpcompatibility/php-compatibility": "^9.0",
                                "phpcompatibility/phpcompatibility-paragonie": "^1.0"
                        },
                        "require-dev": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^1.0"
                        },
                        "suggest": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^1.0 || This Composer plugin will sort out the PHP_CodeSniffer 'installed_paths' automatically.",
                                "roave/security-advisories": "dev-master || Helps prevent installing dependencies with known security issues."
                        },
                        "time": "2024-04-24T21:37:59+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "LGPL-3.0-or-later"
                        ],
                        "authors": [
                                {
                                        "name": "Wim Godden",
                                        "role": "lead"
                                },
                                {
                                        "name": "Juliette Reinders Folmer",
                                        "role": "lead"
                                }
                        ],
                        "description": "A ruleset for PHP_CodeSniffer to check for PHP cross-version compatibility issues in projects, while accounting for polyfills provided by WordPress.",
                        "homepage": "http://phpcompatibility.com/",
                        "keywords": [
                                "compatibility",
                                "phpcs",
                                "standards",
                                "static analysis",
                                "wordpress"
                        ],
                        "support": {
                                "issues": "https://github.com/PHPCompatibility/PHPCompatibilityWP/issues",
                                "security": "https://github.com/PHPCompatibility/PHPCompatibilityWP/security/policy",
                                "source": "https://github.com/PHPCompatibility/PHPCompatibilityWP"
                        },
                        "funding": [
                                {
                                        "url": "https://github.com/PHPCompatibility",
                                        "type": "github"
                                },
                                {
                                        "url": "https://github.com/jrfnl",
                                        "type": "github"
                                },
                                {
                                        "url": "https://opencollective.com/php_codesniffer",
                                        "type": "open_collective"
                                }
                        ],
                        "install-path": "../phpcompatibility/phpcompatibility-wp"
                },
                {
                        "name": "squizlabs/php_codesniffer",
                        "version": "3.10.3",
                        "version_normalized": "3.10.3.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/PHPCSStandards/PHP_CodeSniffer.git",
                                "reference": "62d32998e820bddc40f99f8251958aed187a5c9c"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/PHPCSStandards/PHP_CodeSniffer/zipball/62d32998e820bddc40f99f8251958aed187a5c9c",
                                "reference": "62d32998e820bddc40f99f8251958aed187a5c9c",
                                "shasum": ""
                        },
                        "require": {
                                "ext-simplexml": "*",
                                "ext-tokenizer": "*",
                                "ext-xmlwriter": "*",
                                "php": ">=5.4.0"
                        },
                        "require-dev": {
                                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.3.4"
                        },
                        "time": "2024-09-18T10:38:58+00:00",
                        "bin": [
                                "bin/phpcbf",
                                "bin/phpcs"
                        ],
                        "type": "library",
                        "extra": {
                                "branch-alias": {
                                        "dev-master": "3.x-dev"
                                }
                        },
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "BSD-3-Clause"
                        ],
                        "authors": [
                                {
                                        "name": "Greg Sherwood",
                                        "role": "Former lead"
                                },
                                {
                                        "name": "Juliette Reinders Folmer",
                                        "role": "Current lead"
                                },
                                {
                                        "name": "Contributors",
                                        "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer/graphs/contributors"
                                }
                        ],
                        "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
                        "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
                        "keywords": [
                                "phpcs",
                                "standards",
                                "static analysis"
                        ],
                        "support": {
                                "issues": "https://github.com/PHPCSStandards/PHP_CodeSniffer/issues",
                                "security": "https://github.com/PHPCSStandards/PHP_CodeSniffer/security/policy",
                                "source": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
                                "wiki": "https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki"
                        },
                        "funding": [
                                {
                                        "url": "https://github.com/PHPCSStandards",
                                        "type": "github"
                                },
                                {
                                        "url": "https://github.com/jrfnl",
                                        "type": "github"
                                },
                                {
                                        "url": "https://opencollective.com/php_codesniffer",
                                        "type": "open_collective"
                                }
                        ],
                        "install-path": "../squizlabs/php_codesniffer"
                },
                {
                        "name": "wp-coding-standards/wpcs",
                        "version": "2.3.0",
                        "version_normalized": "2.3.0.0",
                        "source": {
                                "type": "git",
                                "url": "https://github.com/WordPress/WordPress-Coding-Standards.git",
                                "reference": "7da1894633f168fe244afc6de00d141f27517b62"
                        },
                        "dist": {
                                "type": "zip",
                                "url": "https://api.github.com/repos/WordPress/WordPress-Coding-Standards/zipball/7da1894633f168fe244afc6de00d141f27517b62",
                                "reference": "7da1894633f168fe244afc6de00d141f27517b62",
                                "shasum": ""
                        },
                        "require": {
                                "php": ">=5.4",
                                "squizlabs/php_codesniffer": "^3.3.1"
                        },
                        "require-dev": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.5 || ^0.6",
                                "phpcompatibility/php-compatibility": "^9.0",
                                "phpcsstandards/phpcsdevtools": "^1.0",
                                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0"
                        },
                        "suggest": {
                                "dealerdirect/phpcodesniffer-composer-installer": "^0.6 || This Composer plugin will sort out the PHPCS 'installed_paths' automatically."
                        },
                        "time": "2020-05-13T23:57:56+00:00",
                        "type": "phpcodesniffer-standard",
                        "installation-source": "dist",
                        "notification-url": "https://packagist.org/downloads/",
                        "license": [
                                "MIT"
                        ],
                        "authors": [
                                {
                                        "name": "Contributors",
                                        "homepage": "https://github.com/WordPress/WordPress-Coding-Standards/graphs/contributors"
                                }
                        ],
                        "description": "PHP_CodeSniffer rules (sniffs) to enforce WordPress coding conventions",
                        "keywords": [
                                "phpcs",
                                "standards",
                                "wordpress"
                        ],
                        "support": {
                                "issues": "https://github.com/WordPress/WordPress-Coding-Standards/issues",
                                "source": "https://github.com/WordPress/WordPress-Coding-Standards",
                                "wiki": "https://github.com/WordPress/WordPress-Coding-Standards/wiki"
                        },
                        "install-path": "../wp-coding-standards/wpcs"
                }
        ],
        "dev": true,
        "dev-package-names": [
                "automattic/vipwpcs",
                "dealerdirect/phpcodesniffer-composer-installer",
                "fig-r/psr2r-sniffer",
                "humanmade/coding-standards",
                "phpcompatibility/php-compatibility",
                "phpcompatibility/phpcompatibility-paragonie",
                "phpcompatibility/phpcompatibility-wp",
                "squizlabs/php_codesniffer",
                "wp-coding-standards/wpcs"
        ]
}
